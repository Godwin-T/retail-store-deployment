name: Terraform CD

on:
  push:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
      # - 'deployment/**'
      # - 'retail-store-app/src/**/chart/**'

permissions:
  id-token: write
  contents: read

concurrency:
  group: terraform-cd
  cancel-in-progress: false

jobs:
  terraform-apply:
    name: Terraform Apply (saved plan)
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: infra/terraform
    outputs:
      cluster_name: ${{ steps.get_cluster_name.outputs.cluster_name }}
      region: ${{ steps.get_region.outputs.region }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan (save)
        run: terraform plan -input=false -no-color -out .tfplan

      - name: Terraform Apply (use saved plan)
        run: terraform apply -input=false -auto-approve .tfplan

      - name: Get cluster name output
        id: get_cluster_name
        run: |
          echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT

      - name: Get region
        id: get_region
        run: |
          echo "region=${{ secrets.AWS_REGION }}" >> $GITHUB_OUTPUT

  # Application deploys are now handled by Terraform helm_release resources.
